# Configuration-file for pre-commit
# References:
#   - Official docs: https://pre-commit.com
#   - for more hooks: https://pre-commit.com/hooks.html
#
# To avoid duplication, we try to configure the tools in pyproject.toml as much as possible.
#
# Usage:
#   > pre-commit install
#   > pre-commit install hooks  -f
#   > pre-commit autoupdate
#   > pre-commit run --all-files

repos:
  # docs: https://black.readthedocs.io/en/stable/integrations/source_version_control.html
  - repo: local
    hooks:
      - id: black
        name: black
        entry: .venv/bin/black
        args: ["--config=pyproject.toml"]
        # "--check",  # don't write the files back, just return the status.
        language: system # use executable found on path
        types: [python] # check only specific filetypes

  # docs: https://pycqa.github.io/isort/docs/configuration/pre-commit.html
  - repo: local
    hooks:
      - id: isort
        name: isort
        entry: .venv/bin/isort
        args: ["--settings-path=pyproject.toml"]
        language: system

  # docs: https://flake8.pycqa.org/en/latest/user/using-hooks.html
  - repo: local
    hooks:
      - id: flake8
        name: flake8
        entry: .venv/bin/flake8
        language: system
        types: [python]

  - repo: local
    hooks:
      - id: mypy
        name: mypy
        entry: .venv/bin/mypy
        language: system
        types: [python]

  # docs: https://github.com/charliermarsh/ruff-pre-commit
  - repo: local
    hooks:
      - id: ruff
        name: ruff
        entry: .venv/bin/ruff
        language: system
        args: [--fix, --exit-non-zero-on-fix]
        types: [python]

  # - repo: local
  #   hooks:
  #       - id: bandit
  #         name: bandit
  #         entry: .venv/bin/bandit
  #         language: system
  #         types: [python]
  #         # see https://github.com/PyCQA/bandit/issues/318
  #         args: ["--configfile pyproject.toml", "--baseline etc/bandit-baseline.json"]

  # The following are all pre-commit-hooks
  # docs: https://github.com/pre-commit/pre-commit-hooks

  - repo: local
    hooks:
      - id: debug-statements
        name: check-debug-statements
        entry: .venv/bin/debug-statement-hook
        language: system
        types: [python]

  - repo: local
    hooks:
      - id: check-toml
        name: check-toml
        entry: .venv/bin/check-toml
        language: system
        types: [toml]

  - repo: local
    hooks:
      - id: end-of-file-fixer
        name: fix-end-of-filer
        entry: .venv/bin/end-of-file-fixer
        language: system
        types: [python]

  - repo: local
    hooks:
      - id: fix-encoding-pragma
        name: fix-encoding-pragma
        entry: .venv/bin/fix-encoding-pragma --remove
        language: system
        types: [python]

  - repo: local
    hooks:
      - id: mixed-line-ending
        name: fix-mixed-line-ending
        entry: .venv/bin/mixed-line-ending
        language: system
        types: [text]

  - repo: local
    hooks:
      - id: trailing-whitespace
        name: fix-trailing-whitespace
        entry: .venv/bin/trailing-whitespace-fixer
        language: system
        types: [text]

  - repo: local
    hooks:
      - id: poetry-check
        name: poetry-check
        description: run poetry check to validate config
        entry: poetry check
        language: python
        language_version: python3
        pass_filenames: false
        files: ^pyproject.toml$

      # - id: poetry-lock
      #   name: poetry-lock
      #   description: run poetry lock to update lock file
      #   entry: poetry lock
      #   language: python
      #   language_version: python3
      #   pass_filenames: false
